@page "/{gameType}/lobby/{PlayerID:guid}"
@using Chess
@using Chess_Final.Generics
@using Chess_Final.Player
@using Chess_Final.Lobby
@inject NavigationManager Nav
<link rel="stylesheet" href="Lobby.css">
<link rel="stylesheet" href="Generic.css">

<PageTitle>Triple C</PageTitle>

<h1>@gameType Lobby</h1>

<div class="LobbyCard">
    @if (Games?.Count > 0)
        @foreach (var game in Games!)
        {
            {
                <LobbyCard PlayerOne=@game.Value.game.PlayerOne?.Username PlayerTwo=@game.Value.game.PlayerTwo?.Username />
            }
        }
    else
    {
        <div>No Games?</div>
        <div>Create a new one</div>
    }

</div>
<button @onclick=CreateNewGame>Create New Game</button>

@code
{
    [Parameter]
    public string? gameType { get; set; }
    private GameType lobbyType { get; set; }
    [Parameter]
    public Player? currentPlayer { get; set; }
    [Parameter]
    public Guid PlayerID { get; set; }
    public Dictionary<Guid, (bool open, bool active, Game game)>? Games;

    override protected void OnInitialized()
    {
        lobbyType = LobbyManager.ConvertStringToGameType(gameType);
        Games = LobbyManager.GetCurrentLobby(lobbyType);
    }

    override protected void OnParametersSet()
    {
    }

    void CreateNewGame()
    {
        //Create a new game(GameName as type) w/ player name as playerOne
        Guid newGameID = LobbyManager.CreateGame(lobbyType);

        Nav.NavigateTo($"/{gameType}/lobby/Play/{newGameID}/{PlayerID}");
    }
}
