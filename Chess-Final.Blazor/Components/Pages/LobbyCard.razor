@using Chess_Final.Generics
@using Chess_Final.Lobby
@using Chess_Final.Player
@using Chess_Final.PlayerManager
@inject NavigationManager Nav
<link rel="stylesheet" href="LobbyCard.css">
<div class="container">
    <div class="cell">@(game?.PlayerOne?.Username ?? "Waiting")</div>
    <div class="cell">vs</div>
    <div class="cell">@(game?.PlayerTwo?.Username ?? "Waiting")</div>
    <button class="cardButton" disabled=@Playable @onclick=JoinGame>Join</button>
    <button class="cardButton" @onclick=WatchGame>Watch</button>
</div>

@code
{
    [Parameter] public Guid PlayerID { get; set; }
    [Parameter] public Guid GameID { get; set; }
    [Parameter] public GameType gameType { get; set; }

    public Player? player { get; set; }

    public Game? game { get; set; }
    public bool Playable => game?.PlayerTwo != null ? true : false; // Event on toggle for filter

    protected override void OnInitialized()
    {
        Game.GameChanged += () => InvokeAsync(StateHasChanged);
    }
    protected override void OnParametersSet()
    {
        game = LobbyManager.GetGame(gameType, GameID);
        player = PlayerManager.GetPlayer(PlayerID);
    }
    public void JoinGame()
    {
        game?.JoinGame(player, JoinAs.Player);
        Nav.NavigateTo($"/{gameType}/lobby/Play/{GameID}/{PlayerID}");
    }

    public void WatchGame()
    {
        game?.JoinGame(player, JoinAs.Spectator);
        Nav.NavigateTo($"/{gameType}/lobby/Play/{GameID}/{PlayerID}");
    }

}