@page "/"
@using Chess_Final.Player
@using Chess_Final.PlayerManager
@using Chess_Final.Generics
@using Chess_Final.Lobby
@inject NavigationManager NavManager
<link rel="stylesheet" href="Login.css">

<PageTitle>Triple C</PageTitle>

<div class="LoginContainer">

    <h1>Welcome</h1>
    <h3>Login or create an account to play!</h3>

    <form @onsubmit="handleForm" @onsubmit:preventDefault>
        <label> Username <input type="text" @bind=Username></label>
        <label> Password <input type="password" @bind=Password></label>
        @if (create)
        {
            <label> Confirm <input type="password" @bind=Confirm></label>
        }
        <p>@StatusMessage</p>
        <button type="submit">@(create == true ? "Sign Up" : "Sign In")</button>
        <div class="newAccount" @onclick="()=>create=!create">Need an account?</div>
    </form>
</div>

@code
{
    [Parameter]
    public string? Username { get; set; }
    public string? Password { get; set; }
    public string? Confirm { get; set; }
    private bool create = false;
    public Guid? ID { get; set; }
    public string StatusMessage { get; set; } = "";

    protected override void OnInitialized()
    {
        PlayerManager.NewSignIn += LobbyManager.ReloadLobby;
    }

    void handleForm()
    {
        try
        {
            if (create)
            {
                if (Username != null && Password != null && Confirm != null)
                {
                    Player? newPlayer = PlayerManager.SignUp(Username, Password, Confirm);
                    if (newPlayer != null)
                    {
                        ID = newPlayer.PlayerID;
                        NavManager.NavigateTo($"/Home/{ID}");
                    }
                    else
                    {
                        Password = "";
                        StatusMessage = "Oopsie Daisy!";
                        ResetStatusMessage();
                    }
                };
            }
            else
            {
                if (Username != null && Password != null)
                {
                    Player? newPlayer = PlayerManager.SignIn(Username, Password);
                    if (newPlayer != null)
                    {
                        ID = newPlayer.PlayerID;
                        NavManager.NavigateTo($"/Home/{ID}");
                    }
                    else
                    {
                        Password = "";
                        StatusMessage = "Oopsie Daisy!";
                        create = true;
                        ResetStatusMessage();
                    }
                }
            }
        }
        catch (Exception err)
        {
            Console.WriteLine(err);
        }
    }

    async void ResetStatusMessage()
    {
        await Task.Delay(1500);
        StatusMessage = "";
        StateHasChanged();
    }
}
